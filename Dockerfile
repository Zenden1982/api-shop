# --- Этап сборки (Builder) ---
# Используем официальный образ Maven с JDK 17 для сборки проекта.
# Это позволяет нам не устанавливать Maven и JDK на локальную машину.
FROM maven:3.8.5-openjdk-17 AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем pom.xml для загрузки зависимостей
COPY pom.xml .
RUN mvn dependency:go-offline

# Копируем исходный код проекта
COPY src ./src

# Собираем проект, пропуская тесты для ускорения сборки образа
RUN mvn package -DskipTests


# --- Этап выполнения (Runner) ---
# Используем легковесный образ OpenJDK для запуска приложения, чтобы итоговый образ был меньше.
FROM openjdk:17-jdk-slim

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем собранный JAR-файл из этапа сборки
COPY --from=builder /app/target/*.jar app.jar

# Указываем порт, на котором будет работать приложение внутри контейнера
EXPOSE 8080

# Команда для запуска приложения при старте контейнера
ENTRYPOINT ["java", "-jar", "app.jar"]
